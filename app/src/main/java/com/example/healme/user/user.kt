package com.example.healme.user

/**
 * Abstract class representing a User.
 *
 * @property id The identifier of the User generated by firebase.
 * @property email The email address of the User.
 * @property name The name of the User.
 * @property surname The surname of the User.
 * @property dateOfBirth The date of birth of the User.
 */
abstract class User (open val id: String="",
                     open val email: String="",
                     open val name: String="",
                     open val surname: String="",
                     open val dateOfBirth: String="",
) {

    /**
     * Returns the name of the collection for User objects in Firebase.
     *
     * @return The collection name as a String.
     */
    abstract fun getCollectionName(): String

    companion object {
        /**
         * Creates a User object from firebase.
         *
         * @param data A map containing user data.
         * @return A User object populated with the data from the map using the function corresponding to user's type.
         */
        fun fromMap(data: Map<String, Any>): User {
            return when {
                data.containsKey("history") -> Patient.fromMap(data)
                data.containsKey("availability") -> Doctor.fromMap(data)
                data.containsKey("email") -> Admin.fromMap(data)
                else -> throw Exception("(abstractuser) Collection name not recognized")
            }
        }
    }
}
