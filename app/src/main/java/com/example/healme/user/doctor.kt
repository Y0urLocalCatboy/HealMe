package com.example.healme.user

/**
 * Class representing a Doctor.
 *
 * @property id The identifier of the Doctor generated by firebase.
 * @property email The email address of the Doctor.
 * @property name The name of the Doctor.
 * @property surname The surname of the Doctor.
 * @property dateOfBirth The date of birth of the Doctor.
 * @property availability The availability of the Doctor.
 *
 */
class Doctor(
    val availability: MutableList<String> = mutableListOf(),
    val messages: MutableList<String> = mutableListOf(),
    id: String = "",
    email: String = "",
    name: String = "",
    surname: String = "",
    dateOfBirth: String = "",


) : User(id, email, name, surname, dateOfBirth) {
    companion object {

        fun fromMap(data: Map<String, Any?>): Doctor {
            return Doctor(
                availability = TODO("Dodac availability sciagane z Firebase"),

                messages = TODO("Dodac messages sciagane z Firebase"),

                id = data["id"] as? String ?: "",

                name = data["name"] as? String ?: "",

                email = data["email"] as? String ?: "",

                surname = data["surname"] as? String ?: "",

                dateOfBirth = data["dateOfBirth"] as? String ?: "",

            )
        }
    }

    /**
     * Returns the name of the collection for Doctor objects in Firebase.
     *
     * @return "doctors"
     */
    override fun getCollectionName(): String {
        return "doctors"
    }

    /**
     * Returns the name and surname of the Doctor.
     *
     * @return The name and surname of the Doctor as a String.
     */
    override fun toString(): String {
        return "${super.name} ${super.surname}"
    }
}